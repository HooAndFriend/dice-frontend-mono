FROM node:18-alpine AS base

WORKDIR /app

FROM base AS deps

RUN apk add libc6-compat

RUN npm install -g pnpm@8.9.0

COPY package.json pnpm-lock.yaml ./
RUN pnpm install

FROM base AS build

WORKDIR /app

# ARG ENV_MODE
# ENV ENV_MODE=$ENV_MODE

COPY . .
COPY --from=deps /app/node_modules ./node_modules
COPY --from=deps /app/pnpm-lock.yaml ./

# COPY apps/mobile/.env.${ENV_MODE} apps/mobile/.env.production
# COPY apps/web/.env.${ENV_MODE} apps/web/.env.production

RUN npm install -g pnpm@8.9.0
RUN pnpm install
RUN pnpm build

FROM nginx:alpine AS nginx

COPY --from=build /app /usr/share/nginx/html
COPY conf/default.conf /etc/nginx/conf.d/default.conf
COPY conf/nginx.conf /etc/nginx/nginx.conf

RUN apk add nodejs npm

EXPOSE 80
COPY conf/entrypoint.sh /usr/share/nginx/html/entrypoint.sh
COPY partnerCenter /usr/share/nginx/html/partnerCenter/
COPY forbidden /usr/share/nginx/html/forbidden/
RUN chmod +x /usr/share/nginx/html/entrypoint.sh
CMD ["sh", "/usr/share/nginx/html/entrypoint.sh"]
